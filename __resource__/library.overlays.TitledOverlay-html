skit.define("library.overlays.TitledOverlay:html", ["skit.thirdparty.handlebars:runtime"], function() {  return ((function(Handlebars) {
  var template = Handlebars.VM.template({"1":function(container,depth0,helpers,partials,data) {
    var helper;

  return container.escapeExpression(((helper = (helper = helpers.className || (depth0 != null ? depth0.className : depth0)) != null ? helper : helpers.helperMissing),(typeof helper === "function" ? helper.call(depth0 != null ? depth0 : (container.nullContext || {}),{"name":"className","hash":{},"data":data}) : helper)));
},"3":function(container,depth0,helpers,partials,data) {
    var helper;

  return "      <a class=\"left-option close-overlay\">\n        "
    + container.escapeExpression(((helper = (helper = helpers.closeButtonTitle || (depth0 != null ? depth0.closeButtonTitle : depth0)) != null ? helper : helpers.helperMissing),(typeof helper === "function" ? helper.call(depth0 != null ? depth0 : (container.nullContext || {}),{"name":"closeButtonTitle","hash":{},"data":data}) : helper)))
    + "\n      </a>\n";
},"compiler":[7,">= 4.0.0"],"main":function(container,depth0,helpers,partials,data) {
    var stack1, helper, alias1=depth0 != null ? depth0 : (container.nullContext || {});

  return "<div class=\"webapp overlay-container titled-overlay "
    + ((stack1 = helpers["if"].call(alias1,(depth0 != null ? depth0.className : depth0),{"name":"if","hash":{},"fn":container.program(1, data, 0),"inverse":container.noop,"data":data})) != null ? stack1 : "")
    + "\">\n  <div class=\"titlebar\">\n"
    + ((stack1 = helpers["if"].call(alias1,(depth0 != null ? depth0.closeButtonTitle : depth0),{"name":"if","hash":{},"fn":container.program(3, data, 0),"inverse":container.noop,"data":data})) != null ? stack1 : "")
    + "    <span class=\"title\">"
    + container.escapeExpression(((helper = (helper = helpers.title || (depth0 != null ? depth0.title : depth0)) != null ? helper : helpers.helperMissing),(typeof helper === "function" ? helper.call(alias1,{"name":"title","hash":{},"data":data}) : helper)))
    + "</span>\n  </div>\n  <div class=\"titled-overlay-content\"></div>\n</div>";
},"useData":true}, Handlebars);
  var partials = {};  return function(context, opt_options) {
    var options = opt_options || {};
    options.partials = partials;
    return template(context, options);
  }
})).apply(this, arguments)});