skit.define("library.controllers.FloatingBox:html", ["skit.thirdparty.handlebars:runtime"], function() {  return ((function(Handlebars) {
  var template = Handlebars.VM.template({"1":function(container,depth0,helpers,partials,data) {
    return "dashboard/";
},"3":function(container,depth0,helpers,partials,data) {
    var stack1, alias1=container.lambda, alias2=container.escapeExpression;

  return "            <li class=\"dropdown\">\n              <a href=\"#\" class=\"dropdown-toggle\" data-toggle=\"dropdown\" role=\"button\" aria-haspopup=\"true\" aria-expanded=\"false\"><i class=\"fa fa-user\"></i> "
    + alias2(alias1(((stack1 = ((stack1 = (depth0 != null ? depth0.user : depth0)) != null ? stack1.names : stack1)) != null ? stack1.first : stack1), depth0))
    + " <span class=\"caret\"></span></a>\n              <ul class=\"dropdown-menu\">\n                <li"
    + ((stack1 = (helpers.ifPathStartsWith || (depth0 && depth0.ifPathStartsWith) || helpers.helperMissing).call(depth0 != null ? depth0 : (container.nullContext || {}),"/account",{"name":"ifPathStartsWith","hash":{},"fn":container.program(4, data, 0),"inverse":container.noop,"data":data})) != null ? stack1 : "")
    + ">\n                  <a href=\"/account/dashboard/\">\n                    <i class=\"fa fa-user\"></i>\n                    <span>\n                      "
    + alias2(alias1(((stack1 = ((stack1 = (depth0 != null ? depth0.user : depth0)) != null ? stack1.names : stack1)) != null ? stack1.full : stack1), depth0))
    + "\n                    </span>\n                  </a>\n                </li>\n                <li>\n                  <a href=\"/logout/\">\n                    <i class=\"fa fa-sign-out\"></i> <span>Log out</span>\n                  </a>\n                </li>\n              </ul>\n            </li>\n";
},"4":function(container,depth0,helpers,partials,data) {
    return " class=\"active\" ";
},"compiler":[7,">= 4.0.0"],"main":function(container,depth0,helpers,partials,data) {
    var stack1, helper, alias1=depth0 != null ? depth0 : (container.nullContext || {}), alias2=helpers.helperMissing, alias3="function";

  return "<div class=\"webapp-wrapper webapp\">\n\n  <nav>\n    <div class=\"container\">\n      <div class=\"navbar-header\">\n        <button type=\"button\" class=\"navbar-toggle collapsed\" data-toggle=\"collapse\" data-target=\"#bs-example-navbar-collapse-1\" aria-expanded=\"false\">\n          <span class=\"sr-only\">Toggle navigation</span>\n          <span class=\"icon-bar\"></span>\n          <span class=\"icon-bar\"></span>\n          <span class=\"icon-bar\"></span>\n        </button>\n        <a class=\"navbar-brand\" href=\"/"
    + ((stack1 = helpers["if"].call(alias1,(depth0 != null ? depth0.user : depth0),{"name":"if","hash":{},"fn":container.program(1, data, 0),"inverse":container.noop,"data":data})) != null ? stack1 : "")
    + "\">\n          <img src=\"/__static__/images/icon.png\" alt=\"Logo\">\n        </a>\n      </div>\n\n      <div class=\"collapse navbar-collapse\" id=\"bs-example-navbar-collapse-1\">\n\n        <ul class=\"nav navbar-nav navbar-right\">\n"
    + ((stack1 = helpers["if"].call(alias1,(depth0 != null ? depth0.user : depth0),{"name":"if","hash":{},"fn":container.program(3, data, 0),"inverse":container.noop,"data":data})) != null ? stack1 : "")
    + "        </ul>\n      </div>\n    </div>\n  </nav>\n\n  <main class=\"floating-box "
    + container.escapeExpression(((helper = (helper = helpers.floatingBoxClass || (depth0 != null ? depth0.floatingBoxClass : depth0)) != null ? helper : alias2),(typeof helper === alias3 ? helper.call(alias1,{"name":"floatingBoxClass","hash":{},"data":data}) : helper)))
    + "\">\n    <div class=\"content shadowed-box\">\n      "
    + ((stack1 = ((helper = (helper = helpers.body || (depth0 != null ? depth0.body : depth0)) != null ? helper : alias2),(typeof helper === alias3 ? helper.call(alias1,{"name":"body","hash":{},"data":data}) : helper))) != null ? stack1 : "")
    + "\n    </div>\n  </main>\n\n</div>\n";
},"useData":true}, Handlebars);
  var partials = {};  return function(context, opt_options) {
    var options = opt_options || {};
    options.partials = partials;
    return template(context, options);
  }
})).apply(this, arguments)});